// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: torcs_data.proto

#include "torcs_data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

class TorcsDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<TorcsData>
      _instance;
} _TorcsData_default_instance_;
namespace protobuf_torcs_5fdata_2eproto {
static void InitDefaultsTorcsData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_TorcsData_default_instance_;
    new (ptr) ::TorcsData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TorcsData::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_TorcsData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsTorcsData}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_TorcsData.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TorcsData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TorcsData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TorcsData, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TorcsData, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TorcsData, image_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TorcsData, save_flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TorcsData, steer_angle_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TorcsData, red_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TorcsData, green_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TorcsData, blue_),
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
  ~0u,
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 13, sizeof(::TorcsData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_TorcsData_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "torcs_data.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\020torcs_data.proto\"\213\001\n\tTorcsData\022\r\n\005widt"
      "h\030\001 \003(\005\022\016\n\006height\030\002 \003(\005\022\r\n\005image\030\003 \003(\014\022\021"
      "\n\tsave_flag\030\004 \003(\005\022\023\n\013steer_angle\030\005 \003(\001\022\013"
      "\n\003red\030\006 \003(\014\022\r\n\005green\030\007 \003(\014\022\014\n\004blue\030\010 \003(\014"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 160);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "torcs_data.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_torcs_5fdata_2eproto

// ===================================================================

void TorcsData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TorcsData::kWidthFieldNumber;
const int TorcsData::kHeightFieldNumber;
const int TorcsData::kImageFieldNumber;
const int TorcsData::kSaveFlagFieldNumber;
const int TorcsData::kSteerAngleFieldNumber;
const int TorcsData::kRedFieldNumber;
const int TorcsData::kGreenFieldNumber;
const int TorcsData::kBlueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TorcsData::TorcsData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_torcs_5fdata_2eproto::scc_info_TorcsData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:TorcsData)
}
TorcsData::TorcsData(const TorcsData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      width_(from.width_),
      height_(from.height_),
      image_(from.image_),
      save_flag_(from.save_flag_),
      steer_angle_(from.steer_angle_),
      red_(from.red_),
      green_(from.green_),
      blue_(from.blue_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TorcsData)
}

void TorcsData::SharedCtor() {
}

TorcsData::~TorcsData() {
  // @@protoc_insertion_point(destructor:TorcsData)
  SharedDtor();
}

void TorcsData::SharedDtor() {
}

void TorcsData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* TorcsData::descriptor() {
  ::protobuf_torcs_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_torcs_5fdata_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TorcsData& TorcsData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_torcs_5fdata_2eproto::scc_info_TorcsData.base);
  return *internal_default_instance();
}


void TorcsData::Clear() {
// @@protoc_insertion_point(message_clear_start:TorcsData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  width_.Clear();
  height_.Clear();
  image_.Clear();
  save_flag_.Clear();
  steer_angle_.Clear();
  red_.Clear();
  green_.Clear();
  blue_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TorcsData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TorcsData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 width = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8u, input, this->mutable_width())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_width())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16u, input, this->mutable_height())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_height())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes image = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_image()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 save_flag = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32u, input, this->mutable_save_flag())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_save_flag())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double steer_angle = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 41u, input, this->mutable_steer_angle())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_steer_angle())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes red = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_red()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes green = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_green()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes blue = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_blue()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TorcsData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TorcsData)
  return false;
#undef DO_
}

void TorcsData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TorcsData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 width = 1;
  for (int i = 0, n = this->width_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->width(i), output);
  }

  // repeated int32 height = 2;
  for (int i = 0, n = this->height_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->height(i), output);
  }

  // repeated bytes image = 3;
  for (int i = 0, n = this->image_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->image(i), output);
  }

  // repeated int32 save_flag = 4;
  for (int i = 0, n = this->save_flag_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->save_flag(i), output);
  }

  // repeated double steer_angle = 5;
  for (int i = 0, n = this->steer_angle_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      5, this->steer_angle(i), output);
  }

  // repeated bytes red = 6;
  for (int i = 0, n = this->red_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      6, this->red(i), output);
  }

  // repeated bytes green = 7;
  for (int i = 0, n = this->green_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      7, this->green(i), output);
  }

  // repeated bytes blue = 8;
  for (int i = 0, n = this->blue_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      8, this->blue(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TorcsData)
}

::google::protobuf::uint8* TorcsData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TorcsData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 width = 1;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(1, this->width_, target);

  // repeated int32 height = 2;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(2, this->height_, target);

  // repeated bytes image = 3;
  for (int i = 0, n = this->image_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(3, this->image(i), target);
  }

  // repeated int32 save_flag = 4;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(4, this->save_flag_, target);

  // repeated double steer_angle = 5;
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(5, this->steer_angle_, target);

  // repeated bytes red = 6;
  for (int i = 0, n = this->red_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(6, this->red(i), target);
  }

  // repeated bytes green = 7;
  for (int i = 0, n = this->green_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(7, this->green(i), target);
  }

  // repeated bytes blue = 8;
  for (int i = 0, n = this->blue_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(8, this->blue(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TorcsData)
  return target;
}

size_t TorcsData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TorcsData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  // repeated int32 width = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->width_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->width_size());
    total_size += data_size;
  }

  // repeated int32 height = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->height_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->height_size());
    total_size += data_size;
  }

  // repeated bytes image = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->image_size());
  for (int i = 0, n = this->image_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->image(i));
  }

  // repeated int32 save_flag = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->save_flag_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->save_flag_size());
    total_size += data_size;
  }

  // repeated double steer_angle = 5;
  {
    unsigned int count = static_cast<unsigned int>(this->steer_angle_size());
    size_t data_size = 8UL * count;
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->steer_angle_size());
    total_size += data_size;
  }

  // repeated bytes red = 6;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->red_size());
  for (int i = 0, n = this->red_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->red(i));
  }

  // repeated bytes green = 7;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->green_size());
  for (int i = 0, n = this->green_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->green(i));
  }

  // repeated bytes blue = 8;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->blue_size());
  for (int i = 0, n = this->blue_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->blue(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TorcsData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TorcsData)
  GOOGLE_DCHECK_NE(&from, this);
  const TorcsData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TorcsData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TorcsData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TorcsData)
    MergeFrom(*source);
  }
}

void TorcsData::MergeFrom(const TorcsData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TorcsData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  width_.MergeFrom(from.width_);
  height_.MergeFrom(from.height_);
  image_.MergeFrom(from.image_);
  save_flag_.MergeFrom(from.save_flag_);
  steer_angle_.MergeFrom(from.steer_angle_);
  red_.MergeFrom(from.red_);
  green_.MergeFrom(from.green_);
  blue_.MergeFrom(from.blue_);
}

void TorcsData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TorcsData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TorcsData::CopyFrom(const TorcsData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TorcsData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TorcsData::IsInitialized() const {
  return true;
}

void TorcsData::Swap(TorcsData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TorcsData::InternalSwap(TorcsData* other) {
  using std::swap;
  width_.InternalSwap(&other->width_);
  height_.InternalSwap(&other->height_);
  image_.InternalSwap(CastToBase(&other->image_));
  save_flag_.InternalSwap(&other->save_flag_);
  steer_angle_.InternalSwap(&other->steer_angle_);
  red_.InternalSwap(CastToBase(&other->red_));
  green_.InternalSwap(CastToBase(&other->green_));
  blue_.InternalSwap(CastToBase(&other->blue_));
  swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata TorcsData::GetMetadata() const {
  protobuf_torcs_5fdata_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_torcs_5fdata_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::TorcsData* Arena::CreateMaybeMessage< ::TorcsData >(Arena* arena) {
  return Arena::CreateInternal< ::TorcsData >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
